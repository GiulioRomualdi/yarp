/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Wed Feb  7 16:19:38 2024


#ifndef TESTDEVICEWGP_PARAMSPARSER_H
#define TESTDEVICEWGP_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class TestDeviceWGP.
*TestDeviceWGP is a fake device developed for testing the various functionalities of YarpDeviceParamParserGenerator tool.
*This block has been written with the purpose of testing the --input_extra_comments option.
*This last line has no specific meaning.
*Here there are some extra symbols used in the markdown format, such as the 'code' syntax.
*The **bold text** , the *italic text*, the list:
*1. First element
*2. Second element
*- unordered element 1
*- unordered element 2
*
*
* These are the used parameters:
* | Group name        | Parameter name | Type   | Units | Default Value | Required | Description                                               | Notes                                 |
* |:-----------------:|:--------------:|:------:|:-----:|:-------------:|:--------:|:---------------------------------------------------------:|:-------------------------------------:|
* | -                 | file_name      | string | -     | audio_out.wav | 1        | The name of the file written by the module                | Only.wav and .mp3 files are supported |
* | -                 | mode           | string | -     | mode1         | 0        | This fake parameter chooses the fake algorithm to be used | -                                     |
* | -                 | add_marker     | bool   | -     | false         | 0        | Some description of param.                                | -                                     |
* | group1            | param_a        | bool   | -     | false         | 0        | Some description of param.                                | -                                     |
* | group2            | param_a        | bool   | -     | false         | 0        | Some description of param.                                | -                                     |
* | -                 | period         | double | s     | -             | 1        | Algorithm control loop period                             | -                                     |
* | -                 | initial_ref    | double | m     | 3             | 0        | An initial value for the algorithm                        | -                                     |
* | group3::subgroup1 | param_1        | bool   | -     | false         | 1        | This is a parameter for testing purposes                  | -                                     |
* | group3::subgroup1 | param_2        | bool   | -     | true          | 0        | This is a parameter for testing purposes                  | -                                     |
* | group3            | param_3        | bool   | -     | false         | 0        | This is a parameter for testing purposes                  | -                                     |
* | group3::subgroup2 | param_4        | bool   | -     | true          | 0        | This is a parameter for testing purposes                  | -                                     |
*
* The device can be launched by yarpdev using one of the following examples:
* \code{.unparsed}
* yarpdev --device TestDeviceWGP --file_name audio_out.wav --mode mode1 --add_marker false --group1::param_a false --group2::param_a false --period <mandatory_value> --initial_ref 3 --group3::subgroup1::param_1 false --group3::subgroup1::param_2 true --group3::param_3 false --group3::subgroup2::param_4 true
* \endcode
*
* \code{.unparsed}
* yarpdev --device TestDeviceWGP --file_name audio_out.wav --period <mandatory_value> --group3::subgroup1::param_1 false
* \endcode
*
*/

class TestDeviceWGP_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    ~TestDeviceWGP_ParamsParser() override = default;

public:
    const std::string m_device_type = {"TestDeviceWGP"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version;
    std::string m_file_name = {"audio_out.wav"};
    std::string m_mode = {"mode1"};
    bool m_add_marker = {false};
    bool m_group1_param_a = {false};
    bool m_group2_param_a = {false};
    double m_period = {std::nan("1")}; //This default value is autogenerated. It is highly recommended to provide a suggested value also for mandatory parameters.
    double m_initial_ref = {3};
    bool m_group3_subgroup1_param_1 = {false};
    bool m_group3_subgroup1_param_2 = {true};
    bool m_group3_param_3 = {false};
    bool m_group3_subgroup2_param_4 = {true};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceType() const override { return m_device_type; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
